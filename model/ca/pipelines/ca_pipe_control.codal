/**
 * Codasip s.r.o.
 *
 * CONFIDENTIAL
 *
 * Copyright 2022 Codasip s.r.o.
 *
 * All Rights Reserved.
 *
 * NOTICE: All information contained in this file, is and shall remain the property of
 * Codasip s.r.o. and its suppliers, if any.
 *
 * The intellectual and technical concepts contained herein are confidential and proprietary to
 * Codasip s.r.o. and are protected by trade secret and copyright law.  In addition, elements of the
 * technical concepts may be patent pending.
 *
 * This file is part of the Codasip Studio product. No part of the Studio product, including this
 * file, may be use, copied, modified, or distributed except in accordance with the terms contained
 * in Codasip license agreement under which you obtained this file.
 *
 *  \file   ca_pipe_control.codal
 *  \author Codasip
 *  \date   09.02.2022
 *  \brief  cycle accurate model
 */

#include "debug.hcodal"
#include "ca_defines.hcodal"

event pipeline_control : pipeline(pipe.MEMWB)
{
    semantics
    {
        if (s_me_mem_busy || s_syscall_stall) {
//            pipe.IFID.stall();
            pipe.IDEX.stall();
            pipe.EXMEM.stall();
            pipe.MEMWB.stall();         // WB stage must also be stalled to enable Data Forwarding for EX stage
            r_id_stalled = true;
            if (!s_id_icache_stall) r_id_buffer_full = true;
        }
        else if (s_me_take_branch)
        {
            pipe.IDEX.clear();
            pipe.EXMEM.clear();
            r_id_stalled = false;
            r_id_buffer_full = false;
        }
        else {
            r_id_stalled = false;
            r_id_buffer_full = false;
        }
    };
};

